---
# tasks file for deploying java-app

########################################
##                                    ##
## Task to Setup deployment USER and  ##
## SSH Connection                     ##
######################################## 

## This Tasks Creates a deployment user 
- name:  Add Deployment User
  user:
    name: "{{ deploy_user }}"
    state: present
#    update_password: always
    password: "{{ default_user_password | password_hash('sha512','aes512') }}"
    shell: /bin/bash
    update_password: on_create
  tags: add_new_user

## This Task Creates SSH Public Key for Specified user
- name: Generate SSH Keys
  user:
    name: "{{ deploy_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa
  tags: generate_ssh_keys

## This Task is to copy the public keys to user_account
- name: Update Authorized Keys for a User
  authorized_key:
    user: "{{ deploy_user }}"
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  tags: copy_pub_key

- name: Creates directory
  file:
    path: "{{ deploy_dir }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    mode: 0755
  tags: create_dir

- name: Copy Deployment Necessary File
  copy:
    src: "{{ item }}"
    dest: "{{ deploy_dir }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
  with_items: 
    - './mockup_db.sql'
    - '/tmp/test-1.0-SNAPSHOT-jar-with-dependencies.jar'
    - '../etc'
  tags: copy_deploy_file

#- name: Copy DB File in tmp folder
#  copy:
#    src: ./mockup_db.sql
#    dest: /tmp
#  tags: copy_DB

- name: Deploy Jar File
#  connection: ssh
  become: yes
  become_user: "{{ deploy_user }}"
  shell: cd "{{ deploy_dir }}" && nohup java -jar test-1.0-SNAPSHOT-jar-with-dependencies.jar &
  tags: deploy_jar

## This task is to delete the user
# - name: Delete Deploy Users
#   user:
#     name: "{{ deploy_user }}"
#     state: absent
#     remove: yes
#   tags: remove_user

########################################
##                                    ##
## Task to Setup MySQL DB connection  ##
##                                    ##
########################################


#check if mysql service is started
- name: Start the MySQL service
  service: 
    name: mysql 
    state: started
    enabled: true
  tags: mysql_status

#create Database
- name: Create Database
  mysql_db:
    name: "{{ db_name }}"
    state: present
  tags: create_db

- name: Add user
  mysql_user:
    name: "{{ db_user }}"
    host: "{{ host }}"
    password: "{{ db_pw }}"
    priv: ' {{ db_name }}.*:ALL' 
    state: present
  tags: add_user

# - name: Delete user
#   mysql_user:
#     name: "{{ db_user }}"
#     state: absent
#   tags: remove_user

# - name: Delete Database
#   mysql_db:
#     name: "{{ db_name }}"
#     state: absent
#   tags: remove_db

- name: import database
  mysql_db:
    login_user: "{{ db_user }}"
    login_password: "{{ db_pw }}"
    name: "{{ db_name }}"
    state: import
    target: '{{ deploy_dir }}/mockup_db.sql'
  tags: import_db
